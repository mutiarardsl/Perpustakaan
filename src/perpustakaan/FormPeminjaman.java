/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

/**
 *
 * @author Tiara
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

public class FormPeminjaman extends javax.swing.JFrame {

    /**
     * Creates new form FormPeminjaman
     */
   
    private final DefaultTableModel modelDaftarBuku;
    private final DefaultTableModel modelDaftarPinjaman;
    private ArrayList<BukuDipinjam> daftarPinjaman;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public FormPeminjaman(){
        initComponents();
        
        modelDaftarBuku = new DefaultTableModel(new Object[]{"Judul"},0);
        modelDaftarPinjaman = new DefaultTableModel(new Object[]{"Judul","Lama"},0);
        
        jTableDaftarBuku.setModel(modelDaftarBuku);
        jTableDaftarPinjaman.setModel(modelDaftarPinjaman);
        
        daftarPinjaman = new ArrayList<>();
    }
    
    public void tampilkan(){
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldInput = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDaftarBuku = new javax.swing.JTable();
        jButtonPinjam = new javax.swing.JButton();
        jButtonBatal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDaftarPinjaman = new javax.swing.JTable();
        jButtonKonfirmasi = new javax.swing.JButton();
        jTextFieldLama = new javax.swing.JTextField();
        jButtonUbahLama = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldInput.setText("Input");
        jTextFieldInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputActionPerformed(evt);
            }
        });

        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableDaftarBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Daftar Buku"
            }
        ));
        jScrollPane1.setViewportView(jTableDaftarBuku);

        jButtonPinjam.setText("Pinjam");
        jButtonPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPinjamActionPerformed(evt);
            }
        });

        jButtonBatal.setText("Batal");
        jButtonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBatalActionPerformed(evt);
            }
        });

        jTableDaftarPinjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Daftar Pinjaman"
            }
        ));
        jScrollPane2.setViewportView(jTableDaftarPinjaman);

        jButtonKonfirmasi.setText("Konfirmasi");
        jButtonKonfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKonfirmasiActionPerformed(evt);
            }
        });

        jTextFieldLama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldLama.setText("Lama");

        jButtonUbahLama.setText("Ubah Lama");
        jButtonUbahLama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUbahLamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jButtonUbahLama)
                                        .addGap(15, 15, 15)
                                        .addComponent(jButtonKonfirmasi))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButtonPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldLama, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jTextFieldInput, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldLama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPinjam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBatal)
                        .addGap(25, 25, 25)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonKonfirmasi)
                    .addComponent(jButtonUbahLama))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPinjamActionPerformed
        int selectedRow = jTableDaftarBuku.getSelectedRow();
        
        if(selectedRow >= 0){
            String judul = (String) modelDaftarBuku.getValueAt(selectedRow,0);
            
            try {
            int lama = Integer.parseInt(jTextFieldLama.getText());
            
            if (lama > 7){
                JOptionPane.showMessageDialog(this, "Lama waktu peminjaman maksimal 7 hari");
            }else{
                Buku buku = new Buku(judul);
                BukuDipinjam bukuDipinjam = new BukuDipinjam(buku,lama);
                
                daftarPinjaman.add(bukuDipinjam);
                modelDaftarPinjaman.addRow(new Object[]{judul, lama});
                
                jTextFieldLama.setText("");
            }
            }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(this,"Masukkan lama peminjaman dalam bentuk angka");
        }
        }else{
            JOptionPane.showMessageDialog(this,"Pilih buku yang akan dipinjam terlebih dahulu");
        }
    }//GEN-LAST:event_jButtonPinjamActionPerformed
      
    private void jButtonKonfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKonfirmasiActionPerformed
        if (daftarPinjaman.size() > 5){
            JOptionPane.showMessageDialog(this,"Jumlah buku yang dipinjam melebihi batas maksimal 5 buku");
        }else{
            for (BukuDipinjam bukuDipinjam : daftarPinjaman){
                Perpustakaan.controllerPeminjaman.pinjam(bukuDipinjam);
            }
            
            JOptionPane.showMessageDialog(this, "Peminjaman Buku Anda telah dikonfirmasi");
            
            modelDaftarPinjaman.setRowCount(0);
            daftarPinjaman.clear();
        }
    }//GEN-LAST:event_jButtonKonfirmasiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String judul = jTextFieldInput.getText();
        ArrayList<Buku> hasilPencarian = Perpustakaan.controllerPeminjaman.cariBuku(judul);
        
        modelDaftarBuku.setRowCount(0);
        
        for(Buku buku : hasilPencarian){
            modelDaftarBuku.addRow(new Object[]{buku.judul});
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBatalActionPerformed
        int selectedRow = jTableDaftarPinjaman.getSelectedRow();
        
        if (selectedRow >= 0){
            daftarPinjaman.remove(selectedRow);
            modelDaftarPinjaman.removeRow(selectedRow);
        }
    }//GEN-LAST:event_jButtonBatalActionPerformed

    private void jTextFieldInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInputActionPerformed

    private void jButtonUbahLamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUbahLamaActionPerformed
        int selectedRow = jTableDaftarPinjaman.getSelectedRow();
        
        if(selectedRow >= 0){
            try {
            int lamaBaru = Integer.parseInt(jTextFieldLama.getText());
                if(lamaBaru >7){
                JOptionPane.showMessageDialog(this,"Lama waktu peminjaman maksimal 7 hari");
                }     else{
                daftarPinjaman.get(selectedRow).setLama(lamaBaru);
                modelDaftarPinjaman.setValueAt(lamaBaru, selectedRow, 1);
                }       
            } catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Lama peminjaman dalam bentuk angka");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Pilih buku di daftar pinjaman terlebih dahulu");
        }
    }//GEN-LAST:event_jButtonUbahLamaActionPerformed
   

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonBatal;
    private javax.swing.JButton jButtonKonfirmasi;
    private javax.swing.JButton jButtonPinjam;
    private javax.swing.JButton jButtonUbahLama;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDaftarBuku;
    private javax.swing.JTable jTableDaftarPinjaman;
    private javax.swing.JTextField jTextFieldInput;
    private javax.swing.JTextField jTextFieldLama;
    // End of variables declaration//GEN-END:variables
}
